[package]
name = "librashader"
edition = "2021"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

license = "MPL-2.0 OR GPL-3.0-only"
version = "0.2.0-beta.9"
authors = ["Ronny Chan <ronny@ronnychan.ca>"]
repository = "https://github.com/SnowflakePowered/librashader"
readme = "../README.md"
categories = ["emulators", "compilers", "graphics"]
keywords = ["shader", "retroarch", "SPIR-V"]
description = "RetroArch shaders for all."

[dependencies]
librashader-common = { path = "../librashader-common", version = "0.2.0-beta.9" }
librashader-presets = { path = "../librashader-presets", version = "0.2.0-beta.9" }
librashader-preprocess = { path = "../librashader-preprocess", version = "0.2.0-beta.9" }
librashader-reflect = { path = "../librashader-reflect", version = "0.2.0-beta.9" }
librashader-runtime  = { path = "../librashader-runtime", version = "0.2.0-beta.9" }
librashader-runtime-d3d11  = { path = "../librashader-runtime-d3d11", version = "0.2.0-beta.9", optional = true }
librashader-runtime-d3d12  = { path = "../librashader-runtime-d3d12", version = "0.2.0-beta.9", optional = true }
librashader-runtime-gl = { path = "../librashader-runtime-gl", version = "0.2.0-beta.9", optional = true }
librashader-runtime-vk = { path = "../librashader-runtime-vk", version = "0.2.0-beta.9", optional = true }
librashader-runtime-wgpu = { path = "../librashader-runtime-wgpu", version = "0.2.0-beta.9", optional = true }

librashader-cache = { path = "../librashader-cache", version = "0.2.0-beta.9" }

ash = { version = "0.37", optional = true }
wgpu = { version = "0.19", optional = true }
wgpu-types = { version = "0.19", optional = true }

[target.'cfg(windows)'.dependencies.windows]
version = "0.48.0"
optional = true

[features]
# core features and definitions
runtime = []
reflect = []
preprocess = []
presets = []

# runtimes

runtime-gl = [ "runtime", "reflect-cross", "librashader-common/opengl", "librashader-runtime-gl" ]
runtime-d3d11 = [ "runtime", "reflect-cross","librashader-common/d3d11", "librashader-runtime-d3d11", "windows/Win32_Graphics_Direct3D11" ]
runtime-d3d12 = [ "runtime", "reflect-cross", "reflect-dxil", "librashader-common/d3d12", "librashader-runtime-d3d12", "windows/Win32_Graphics_Direct3D12" ]
runtime-vk = ["runtime", "reflect-cross", "librashader-common/vulkan", "librashader-runtime-vk", "ash" ]
runtime-wgpu = [ "runtime", "reflect-naga", "librashader-common/wgpu", "librashader-runtime-wgpu", "wgpu", "wgpu-types" ]

# reflection
reflect-cross = ["reflect", "librashader-reflect/cross"]
reflect-dxil = ["reflect", "librashader-reflect/dxil"]
reflect-naga = ["reflect", "librashader-reflect/naga"]

runtime-all = ["runtime-gl", "runtime-d3d11", "runtime-d3d12", "runtime-vk", "runtime-wgpu"]
reflect-all = ["reflect-cross", "reflect-dxil", "reflect-naga"]

# enable all features by default
default = [ "full" ]
internal = []

full = ["runtime-all", "reflect-all", "preprocess", "presets"]

# cache hack
docsrs = ["librashader-cache/docsrs"]

[package.metadata.docs.rs]
targets = ["x86_64-pc-windows-msvc", "x86_64-unknown-linux-gnu"]
features = [ "librashader-cache/docsrs" ]
